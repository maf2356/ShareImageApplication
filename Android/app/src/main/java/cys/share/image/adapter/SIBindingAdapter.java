package cys.share.image.adapter;

import android.databinding.BindingAdapter;
import android.graphics.Bitmap;
import android.graphics.drawable.Drawable;
import android.text.Editable;
import android.text.TextUtils;
import android.text.TextWatcher;
import android.widget.EditText;
import android.widget.ImageView;

import com.bumptech.glide.Glide;
import com.squareup.picasso.Picasso;

import cys.share.image.R;
import cys.share.image.auxiliary.ShareImageAuxiliaryTool;

/**
 * Created by Administrator on 2016/10/28.
 */
public class SIBindingAdapter {

    @BindingAdapter({"imageUrl", "width", "height"})
    public static void loadImage(ImageView view, String url, int width, int height) {
        float dimension = view.getContext().getResources().getDimension(R.dimen.activity_horizontal_margin);
        int widthImg = (int) (ShareImageAuxiliaryTool.getWindowsWidth(view.getContext()) - dimension);
//        ShareImageAuxiliaryTool.log(widthImg+"");
        if (width == 0 || height == 0) {
            view.setImageResource(R.mipmap.img_default);
        } else {
            int heightImg = (int) (widthImg / (((float) width / height)));
//            Picasso.with(view.getContext()).load(url).config(Bitmap.Config.RGB_565).resize(widthImg,heightImg).error(R.mipmap.img_default).into(view);
            Picasso.with(view.getContext()).load(url).config(Bitmap.Config.RGB_565).into(view);
        }
//        Glide.with(view.getContext()).load(url).into(view);
    }

    @BindingAdapter({"imageUrl"})
    public static void loadImage(ImageView view, String url) {
        Picasso.with(view.getContext()).load(url).config(Bitmap.Config.RGB_565).into(view);
    }

    @BindingAdapter({"loadAvatar"})
    public static void loadAvatar(ImageView view, String url) {
        Picasso.with(view.getContext()).load(url).config(Bitmap.Config.RGB_565).error(R.drawable.ic_launcher).into(view);
    }

    @BindingAdapter({"loadImage"})
    public static void loadLargeViewImage(ImageView view, String url) {
        Picasso.with(view.getContext()).load(url).config(Bitmap.Config.ARGB_8888).into(view);
    }

    public static void tagAutoGenerated(EditText view, final BindableString bindableString) {
        view.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {

            }

            @Override
            public void onTextChanged(CharSequence s, int start,
                                      int before, int count) {
                bindableString.set(s.toString());
            }

            @Override
            public void afterTextChanged(Editable editable) {

            }
        });
        String newValue = bindableString.get();
        if (!view.getText().toString().equals(newValue)) {
            view.setText(newValue);
        }


    }

}
